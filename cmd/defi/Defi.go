// Code generated - DO NOT EDIT.
// This file is a generated binding and any manual changes will be lost.

package defi

import (
	"math/big"
	"strings"

	ethereum "github.com/ethereum/go-ethereum"
	"github.com/ethereum/go-ethereum/accounts/abi"
	"github.com/ethereum/go-ethereum/accounts/abi/bind"
	"github.com/ethereum/go-ethereum/common"
	"github.com/ethereum/go-ethereum/core/types"
	"github.com/ethereum/go-ethereum/event"
)

// Reference imports to suppress errors if they are not otherwise used.
var (
	_ = big.NewInt
	_ = strings.NewReader
	_ = ethereum.NotFound
	_ = bind.Bind
	_ = common.Big1
	_ = types.BloomLookup
	_ = event.NewSubscription
)

// DefiABI is the input ABI used to generate the binding from.
const DefiABI = "[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_fee\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_orderOwner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_pledgeAmount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_loanCoin\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_loanAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_timeLevel\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_rateAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_fee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_compClosPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_createTime\",\"type\":\"uint256\"}],\"name\":\"createLoanOrder\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_loanId\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"_supIdList\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_sonSupIdList\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_rateAmounts\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_pledgeAmounts\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"_createtime\",\"type\":\"uint256\"}],\"name\":\"createMatchOrder\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_orderOwner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_coinAddr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_timeLevel\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_createTime\",\"type\":\"uint256\"}],\"name\":\"createSupOrder\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeAddr\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"loan_ordList\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"lo_id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"lo_owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"lo_pledgeAmount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"lo_loanCoin\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"lo_loanAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lo_timeLevel\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lo_rateAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lo_feeAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lo_compClosePrice\",\"type\":\"uint256\"},{\"internalType\":\"enumorderStruct.lo_moState\",\"name\":\"lo_state\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"lo_time\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lo_finshTime\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"managers\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"match_ordList\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"mo_id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"mo_loId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"mo_time\",\"type\":\"uint256\"},{\"internalType\":\"enumorderStruct.lo_moState\",\"name\":\"mo_state\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"mo_finshTime\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"plyPledgeBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_moid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_time\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_procType\",\"type\":\"uint256\"}],\"name\":\"processOrder\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_mAddr\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isAdd\",\"type\":\"bool\"}],\"name\":\"setManager\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"sons_ordList\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"sonso_id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"sonso_parentId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"sonso_loanId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"sonso_amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"sonso_time\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"sonso_rateAmount\",\"type\":\"uint256\"},{\"internalType\":\"enumorderStruct.soState\",\"name\":\"sonso_state\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"sonso_finshTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"sonso_pledgeAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"sup_ordList\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"so_id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"so_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"so_coinAddr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"so_amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"so_timelevel\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"so_rateAmount\",\"type\":\"uint256\"},{\"internalType\":\"enumorderStruct.soState\",\"name\":\"so_state\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"so_time\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"so_activeAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"so_finshTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"so_pledgeAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"totalBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_supId\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}]"

// DefiBin is the compiled bytecode used for deploying new contracts.
var DefiBin = ""

// DeployDefi deploys a new Ethereum contract, binding an instance of Defi to it.
func DeployDefi(auth *bind.TransactOpts, backend bind.ContractBackend, _fee common.Address) (common.Address, *types.Transaction, *Defi, error) {
	parsed, err := abi.JSON(strings.NewReader(DefiABI))
	if err != nil {
		return common.Address{}, nil, nil, err
	}

	address, tx, contract, err := bind.DeployContract(auth, parsed, common.FromHex(DefiBin), backend, _fee)
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	return address, tx, &Defi{DefiCaller: DefiCaller{contract: contract}, DefiTransactor: DefiTransactor{contract: contract}, DefiFilterer: DefiFilterer{contract: contract}}, nil
}

// Defi is an auto generated Go binding around an Ethereum contract.
type Defi struct {
	DefiCaller     // Read-only binding to the contract
	DefiTransactor // Write-only binding to the contract
	DefiFilterer   // Log filterer for contract events
}

// DefiCaller is an auto generated read-only Go binding around an Ethereum contract.
type DefiCaller struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// DefiTransactor is an auto generated write-only Go binding around an Ethereum contract.
type DefiTransactor struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// DefiFilterer is an auto generated log filtering Go binding around an Ethereum contract events.
type DefiFilterer struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// DefiSession is an auto generated Go binding around an Ethereum contract,
// with pre-set call and transact options.
type DefiSession struct {
	Contract     *Defi             // Generic contract binding to set the session for
	CallOpts     bind.CallOpts     // Call options to use throughout this session
	TransactOpts bind.TransactOpts // Transaction auth options to use throughout this session
}

// DefiCallerSession is an auto generated read-only Go binding around an Ethereum contract,
// with pre-set call options.
type DefiCallerSession struct {
	Contract *DefiCaller   // Generic contract caller binding to set the session for
	CallOpts bind.CallOpts // Call options to use throughout this session
}

// DefiTransactorSession is an auto generated write-only Go binding around an Ethereum contract,
// with pre-set transact options.
type DefiTransactorSession struct {
	Contract     *DefiTransactor   // Generic contract transactor binding to set the session for
	TransactOpts bind.TransactOpts // Transaction auth options to use throughout this session
}

// DefiRaw is an auto generated low-level Go binding around an Ethereum contract.
type DefiRaw struct {
	Contract *Defi // Generic contract binding to access the raw methods on
}

// DefiCallerRaw is an auto generated low-level read-only Go binding around an Ethereum contract.
type DefiCallerRaw struct {
	Contract *DefiCaller // Generic read-only contract binding to access the raw methods on
}

// DefiTransactorRaw is an auto generated low-level write-only Go binding around an Ethereum contract.
type DefiTransactorRaw struct {
	Contract *DefiTransactor // Generic write-only contract binding to access the raw methods on
}

// NewDefi creates a new instance of Defi, bound to a specific deployed contract.
func NewDefi(address common.Address, backend bind.ContractBackend) (*Defi, error) {
	contract, err := bindDefi(address, backend, backend, backend)
	if err != nil {
		return nil, err
	}
	return &Defi{DefiCaller: DefiCaller{contract: contract}, DefiTransactor: DefiTransactor{contract: contract}, DefiFilterer: DefiFilterer{contract: contract}}, nil
}

// NewDefiCaller creates a new read-only instance of Defi, bound to a specific deployed contract.
func NewDefiCaller(address common.Address, caller bind.ContractCaller) (*DefiCaller, error) {
	contract, err := bindDefi(address, caller, nil, nil)
	if err != nil {
		return nil, err
	}
	return &DefiCaller{contract: contract}, nil
}

// NewDefiTransactor creates a new write-only instance of Defi, bound to a specific deployed contract.
func NewDefiTransactor(address common.Address, transactor bind.ContractTransactor) (*DefiTransactor, error) {
	contract, err := bindDefi(address, nil, transactor, nil)
	if err != nil {
		return nil, err
	}
	return &DefiTransactor{contract: contract}, nil
}

// NewDefiFilterer creates a new log filterer instance of Defi, bound to a specific deployed contract.
func NewDefiFilterer(address common.Address, filterer bind.ContractFilterer) (*DefiFilterer, error) {
	contract, err := bindDefi(address, nil, nil, filterer)
	if err != nil {
		return nil, err
	}
	return &DefiFilterer{contract: contract}, nil
}

// bindDefi binds a generic wrapper to an already deployed contract.
func bindDefi(address common.Address, caller bind.ContractCaller, transactor bind.ContractTransactor, filterer bind.ContractFilterer) (*bind.BoundContract, error) {
	parsed, err := abi.JSON(strings.NewReader(DefiABI))
	if err != nil {
		return nil, err
	}
	return bind.NewBoundContract(address, parsed, caller, transactor, filterer), nil
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_Defi *DefiRaw) Call(opts *bind.CallOpts, result interface{}, method string, params ...interface{}) error {
	return _Defi.Contract.DefiCaller.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_Defi *DefiRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Defi.Contract.DefiTransactor.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_Defi *DefiRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _Defi.Contract.DefiTransactor.contract.Transact(opts, method, params...)
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_Defi *DefiCallerRaw) Call(opts *bind.CallOpts, result interface{}, method string, params ...interface{}) error {
	return _Defi.Contract.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_Defi *DefiTransactorRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Defi.Contract.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_Defi *DefiTransactorRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _Defi.Contract.contract.Transact(opts, method, params...)
}

// FeeAddr is a free data retrieval call binding the contract method 0x39e7fddc.
//
// Solidity: function feeAddr() view returns(address)
func (_Defi *DefiCaller) FeeAddr(opts *bind.CallOpts) (common.Address, error) {
	var (
		ret0 = new(common.Address)
	)
	out := ret0
	err := _Defi.contract.Call(opts, out, "feeAddr")
	return *ret0, err
}

// FeeAddr is a free data retrieval call binding the contract method 0x39e7fddc.
//
// Solidity: function feeAddr() view returns(address)
func (_Defi *DefiSession) FeeAddr() (common.Address, error) {
	return _Defi.Contract.FeeAddr(&_Defi.CallOpts)
}

// FeeAddr is a free data retrieval call binding the contract method 0x39e7fddc.
//
// Solidity: function feeAddr() view returns(address)
func (_Defi *DefiCallerSession) FeeAddr() (common.Address, error) {
	return _Defi.Contract.FeeAddr(&_Defi.CallOpts)
}

// LoanOrdList is a free data retrieval call binding the contract method 0x9f2ad0f0.
//
// Solidity: function loan_ordList(uint256 ) view returns(uint256 lo_id, address lo_owner, uint256 lo_pledgeAmount, address lo_loanCoin, uint256 lo_loanAmount, uint256 lo_timeLevel, uint256 lo_rateAmount, uint256 lo_feeAmount, uint256 lo_compClosePrice, uint8 lo_state, uint256 lo_time, uint256 lo_finshTime)
func (_Defi *DefiCaller) LoanOrdList(opts *bind.CallOpts, arg0 *big.Int) (struct {
	LoId             *big.Int
	LoOwner          common.Address
	LoPledgeAmount   *big.Int
	LoLoanCoin       common.Address
	LoLoanAmount     *big.Int
	LoTimeLevel      *big.Int
	LoRateAmount     *big.Int
	LoFeeAmount      *big.Int
	LoCompClosePrice *big.Int
	LoState          uint8
	LoTime           *big.Int
	LoFinshTime      *big.Int
}, error) {
	ret := new(struct {
		LoId             *big.Int
		LoOwner          common.Address
		LoPledgeAmount   *big.Int
		LoLoanCoin       common.Address
		LoLoanAmount     *big.Int
		LoTimeLevel      *big.Int
		LoRateAmount     *big.Int
		LoFeeAmount      *big.Int
		LoCompClosePrice *big.Int
		LoState          uint8
		LoTime           *big.Int
		LoFinshTime      *big.Int
	})
	out := ret
	err := _Defi.contract.Call(opts, out, "loan_ordList", arg0)
	return *ret, err
}

// LoanOrdList is a free data retrieval call binding the contract method 0x9f2ad0f0.
//
// Solidity: function loan_ordList(uint256 ) view returns(uint256 lo_id, address lo_owner, uint256 lo_pledgeAmount, address lo_loanCoin, uint256 lo_loanAmount, uint256 lo_timeLevel, uint256 lo_rateAmount, uint256 lo_feeAmount, uint256 lo_compClosePrice, uint8 lo_state, uint256 lo_time, uint256 lo_finshTime)
func (_Defi *DefiSession) LoanOrdList(arg0 *big.Int) (struct {
	LoId             *big.Int
	LoOwner          common.Address
	LoPledgeAmount   *big.Int
	LoLoanCoin       common.Address
	LoLoanAmount     *big.Int
	LoTimeLevel      *big.Int
	LoRateAmount     *big.Int
	LoFeeAmount      *big.Int
	LoCompClosePrice *big.Int
	LoState          uint8
	LoTime           *big.Int
	LoFinshTime      *big.Int
}, error) {
	return _Defi.Contract.LoanOrdList(&_Defi.CallOpts, arg0)
}

// LoanOrdList is a free data retrieval call binding the contract method 0x9f2ad0f0.
//
// Solidity: function loan_ordList(uint256 ) view returns(uint256 lo_id, address lo_owner, uint256 lo_pledgeAmount, address lo_loanCoin, uint256 lo_loanAmount, uint256 lo_timeLevel, uint256 lo_rateAmount, uint256 lo_feeAmount, uint256 lo_compClosePrice, uint8 lo_state, uint256 lo_time, uint256 lo_finshTime)
func (_Defi *DefiCallerSession) LoanOrdList(arg0 *big.Int) (struct {
	LoId             *big.Int
	LoOwner          common.Address
	LoPledgeAmount   *big.Int
	LoLoanCoin       common.Address
	LoLoanAmount     *big.Int
	LoTimeLevel      *big.Int
	LoRateAmount     *big.Int
	LoFeeAmount      *big.Int
	LoCompClosePrice *big.Int
	LoState          uint8
	LoTime           *big.Int
	LoFinshTime      *big.Int
}, error) {
	return _Defi.Contract.LoanOrdList(&_Defi.CallOpts, arg0)
}

// Managers is a free data retrieval call binding the contract method 0xfdff9b4d.
//
// Solidity: function managers(address ) view returns(bool)
func (_Defi *DefiCaller) Managers(opts *bind.CallOpts, arg0 common.Address) (bool, error) {
	var (
		ret0 = new(bool)
	)
	out := ret0
	err := _Defi.contract.Call(opts, out, "managers", arg0)
	return *ret0, err
}

// Managers is a free data retrieval call binding the contract method 0xfdff9b4d.
//
// Solidity: function managers(address ) view returns(bool)
func (_Defi *DefiSession) Managers(arg0 common.Address) (bool, error) {
	return _Defi.Contract.Managers(&_Defi.CallOpts, arg0)
}

// Managers is a free data retrieval call binding the contract method 0xfdff9b4d.
//
// Solidity: function managers(address ) view returns(bool)
func (_Defi *DefiCallerSession) Managers(arg0 common.Address) (bool, error) {
	return _Defi.Contract.Managers(&_Defi.CallOpts, arg0)
}

// MatchOrdList is a free data retrieval call binding the contract method 0x6b114116.
//
// Solidity: function match_ordList(uint256 ) view returns(uint256 mo_id, uint256 mo_loId, uint256 mo_time, uint8 mo_state, uint256 mo_finshTime)
func (_Defi *DefiCaller) MatchOrdList(opts *bind.CallOpts, arg0 *big.Int) (struct {
	MoId        *big.Int
	MoLoId      *big.Int
	MoTime      *big.Int
	MoState     uint8
	MoFinshTime *big.Int
}, error) {
	ret := new(struct {
		MoId        *big.Int
		MoLoId      *big.Int
		MoTime      *big.Int
		MoState     uint8
		MoFinshTime *big.Int
	})
	out := ret
	err := _Defi.contract.Call(opts, out, "match_ordList", arg0)
	return *ret, err
}

// MatchOrdList is a free data retrieval call binding the contract method 0x6b114116.
//
// Solidity: function match_ordList(uint256 ) view returns(uint256 mo_id, uint256 mo_loId, uint256 mo_time, uint8 mo_state, uint256 mo_finshTime)
func (_Defi *DefiSession) MatchOrdList(arg0 *big.Int) (struct {
	MoId        *big.Int
	MoLoId      *big.Int
	MoTime      *big.Int
	MoState     uint8
	MoFinshTime *big.Int
}, error) {
	return _Defi.Contract.MatchOrdList(&_Defi.CallOpts, arg0)
}

// MatchOrdList is a free data retrieval call binding the contract method 0x6b114116.
//
// Solidity: function match_ordList(uint256 ) view returns(uint256 mo_id, uint256 mo_loId, uint256 mo_time, uint8 mo_state, uint256 mo_finshTime)
func (_Defi *DefiCallerSession) MatchOrdList(arg0 *big.Int) (struct {
	MoId        *big.Int
	MoLoId      *big.Int
	MoTime      *big.Int
	MoState     uint8
	MoFinshTime *big.Int
}, error) {
	return _Defi.Contract.MatchOrdList(&_Defi.CallOpts, arg0)
}

// Owner is a free data retrieval call binding the contract method 0x8da5cb5b.
//
// Solidity: function owner() view returns(address)
func (_Defi *DefiCaller) Owner(opts *bind.CallOpts) (common.Address, error) {
	var (
		ret0 = new(common.Address)
	)
	out := ret0
	err := _Defi.contract.Call(opts, out, "owner")
	return *ret0, err
}

// Owner is a free data retrieval call binding the contract method 0x8da5cb5b.
//
// Solidity: function owner() view returns(address)
func (_Defi *DefiSession) Owner() (common.Address, error) {
	return _Defi.Contract.Owner(&_Defi.CallOpts)
}

// Owner is a free data retrieval call binding the contract method 0x8da5cb5b.
//
// Solidity: function owner() view returns(address)
func (_Defi *DefiCallerSession) Owner() (common.Address, error) {
	return _Defi.Contract.Owner(&_Defi.CallOpts)
}

// PlyPledgeBalance is a free data retrieval call binding the contract method 0x20c7d114.
//
// Solidity: function plyPledgeBalance(address ) view returns(uint256)
func (_Defi *DefiCaller) PlyPledgeBalance(opts *bind.CallOpts, arg0 common.Address) (*big.Int, error) {
	var (
		ret0 = new(*big.Int)
	)
	out := ret0
	err := _Defi.contract.Call(opts, out, "plyPledgeBalance", arg0)
	return *ret0, err
}

// PlyPledgeBalance is a free data retrieval call binding the contract method 0x20c7d114.
//
// Solidity: function plyPledgeBalance(address ) view returns(uint256)
func (_Defi *DefiSession) PlyPledgeBalance(arg0 common.Address) (*big.Int, error) {
	return _Defi.Contract.PlyPledgeBalance(&_Defi.CallOpts, arg0)
}

// PlyPledgeBalance is a free data retrieval call binding the contract method 0x20c7d114.
//
// Solidity: function plyPledgeBalance(address ) view returns(uint256)
func (_Defi *DefiCallerSession) PlyPledgeBalance(arg0 common.Address) (*big.Int, error) {
	return _Defi.Contract.PlyPledgeBalance(&_Defi.CallOpts, arg0)
}

// SonsOrdList is a free data retrieval call binding the contract method 0xd7b30d11.
//
// Solidity: function sons_ordList(uint256 ) view returns(uint256 sonso_id, uint256 sonso_parentId, uint256 sonso_loanId, uint256 sonso_amount, uint256 sonso_time, uint256 sonso_rateAmount, uint8 sonso_state, uint256 sonso_finshTime, uint256 sonso_pledgeAmount)
func (_Defi *DefiCaller) SonsOrdList(opts *bind.CallOpts, arg0 *big.Int) (struct {
	SonsoId           *big.Int
	SonsoParentId     *big.Int
	SonsoLoanId       *big.Int
	SonsoAmount       *big.Int
	SonsoTime         *big.Int
	SonsoRateAmount   *big.Int
	SonsoState        uint8
	SonsoFinshTime    *big.Int
	SonsoPledgeAmount *big.Int
}, error) {
	ret := new(struct {
		SonsoId           *big.Int
		SonsoParentId     *big.Int
		SonsoLoanId       *big.Int
		SonsoAmount       *big.Int
		SonsoTime         *big.Int
		SonsoRateAmount   *big.Int
		SonsoState        uint8
		SonsoFinshTime    *big.Int
		SonsoPledgeAmount *big.Int
	})
	out := ret
	err := _Defi.contract.Call(opts, out, "sons_ordList", arg0)
	return *ret, err
}

// SonsOrdList is a free data retrieval call binding the contract method 0xd7b30d11.
//
// Solidity: function sons_ordList(uint256 ) view returns(uint256 sonso_id, uint256 sonso_parentId, uint256 sonso_loanId, uint256 sonso_amount, uint256 sonso_time, uint256 sonso_rateAmount, uint8 sonso_state, uint256 sonso_finshTime, uint256 sonso_pledgeAmount)
func (_Defi *DefiSession) SonsOrdList(arg0 *big.Int) (struct {
	SonsoId           *big.Int
	SonsoParentId     *big.Int
	SonsoLoanId       *big.Int
	SonsoAmount       *big.Int
	SonsoTime         *big.Int
	SonsoRateAmount   *big.Int
	SonsoState        uint8
	SonsoFinshTime    *big.Int
	SonsoPledgeAmount *big.Int
}, error) {
	return _Defi.Contract.SonsOrdList(&_Defi.CallOpts, arg0)
}

// SonsOrdList is a free data retrieval call binding the contract method 0xd7b30d11.
//
// Solidity: function sons_ordList(uint256 ) view returns(uint256 sonso_id, uint256 sonso_parentId, uint256 sonso_loanId, uint256 sonso_amount, uint256 sonso_time, uint256 sonso_rateAmount, uint8 sonso_state, uint256 sonso_finshTime, uint256 sonso_pledgeAmount)
func (_Defi *DefiCallerSession) SonsOrdList(arg0 *big.Int) (struct {
	SonsoId           *big.Int
	SonsoParentId     *big.Int
	SonsoLoanId       *big.Int
	SonsoAmount       *big.Int
	SonsoTime         *big.Int
	SonsoRateAmount   *big.Int
	SonsoState        uint8
	SonsoFinshTime    *big.Int
	SonsoPledgeAmount *big.Int
}, error) {
	return _Defi.Contract.SonsOrdList(&_Defi.CallOpts, arg0)
}

// SupOrdList is a free data retrieval call binding the contract method 0xef3a6970.
//
// Solidity: function sup_ordList(uint256 ) view returns(uint256 so_id, address so_owner, address so_coinAddr, uint256 so_amount, uint256 so_timelevel, uint256 so_rateAmount, uint8 so_state, uint256 so_time, uint256 so_activeAmount, uint256 so_finshTime, uint256 so_pledgeAmount)
func (_Defi *DefiCaller) SupOrdList(opts *bind.CallOpts, arg0 *big.Int) (struct {
	SoId           *big.Int
	SoOwner        common.Address
	SoCoinAddr     common.Address
	SoAmount       *big.Int
	SoTimelevel    *big.Int
	SoRateAmount   *big.Int
	SoState        uint8
	SoTime         *big.Int
	SoActiveAmount *big.Int
	SoFinshTime    *big.Int
	SoPledgeAmount *big.Int
}, error) {
	ret := new(struct {
		SoId           *big.Int
		SoOwner        common.Address
		SoCoinAddr     common.Address
		SoAmount       *big.Int
		SoTimelevel    *big.Int
		SoRateAmount   *big.Int
		SoState        uint8
		SoTime         *big.Int
		SoActiveAmount *big.Int
		SoFinshTime    *big.Int
		SoPledgeAmount *big.Int
	})
	out := ret
	err := _Defi.contract.Call(opts, out, "sup_ordList", arg0)
	return *ret, err
}

// SupOrdList is a free data retrieval call binding the contract method 0xef3a6970.
//
// Solidity: function sup_ordList(uint256 ) view returns(uint256 so_id, address so_owner, address so_coinAddr, uint256 so_amount, uint256 so_timelevel, uint256 so_rateAmount, uint8 so_state, uint256 so_time, uint256 so_activeAmount, uint256 so_finshTime, uint256 so_pledgeAmount)
func (_Defi *DefiSession) SupOrdList(arg0 *big.Int) (struct {
	SoId           *big.Int
	SoOwner        common.Address
	SoCoinAddr     common.Address
	SoAmount       *big.Int
	SoTimelevel    *big.Int
	SoRateAmount   *big.Int
	SoState        uint8
	SoTime         *big.Int
	SoActiveAmount *big.Int
	SoFinshTime    *big.Int
	SoPledgeAmount *big.Int
}, error) {
	return _Defi.Contract.SupOrdList(&_Defi.CallOpts, arg0)
}

// SupOrdList is a free data retrieval call binding the contract method 0xef3a6970.
//
// Solidity: function sup_ordList(uint256 ) view returns(uint256 so_id, address so_owner, address so_coinAddr, uint256 so_amount, uint256 so_timelevel, uint256 so_rateAmount, uint8 so_state, uint256 so_time, uint256 so_activeAmount, uint256 so_finshTime, uint256 so_pledgeAmount)
func (_Defi *DefiCallerSession) SupOrdList(arg0 *big.Int) (struct {
	SoId           *big.Int
	SoOwner        common.Address
	SoCoinAddr     common.Address
	SoAmount       *big.Int
	SoTimelevel    *big.Int
	SoRateAmount   *big.Int
	SoState        uint8
	SoTime         *big.Int
	SoActiveAmount *big.Int
	SoFinshTime    *big.Int
	SoPledgeAmount *big.Int
}, error) {
	return _Defi.Contract.SupOrdList(&_Defi.CallOpts, arg0)
}

// TotalBalance is a free data retrieval call binding the contract method 0x6eacd398.
//
// Solidity: function totalBalance(address ) view returns(uint256)
func (_Defi *DefiCaller) TotalBalance(opts *bind.CallOpts, arg0 common.Address) (*big.Int, error) {
	var (
		ret0 = new(*big.Int)
	)
	out := ret0
	err := _Defi.contract.Call(opts, out, "totalBalance", arg0)
	return *ret0, err
}

// TotalBalance is a free data retrieval call binding the contract method 0x6eacd398.
//
// Solidity: function totalBalance(address ) view returns(uint256)
func (_Defi *DefiSession) TotalBalance(arg0 common.Address) (*big.Int, error) {
	return _Defi.Contract.TotalBalance(&_Defi.CallOpts, arg0)
}

// TotalBalance is a free data retrieval call binding the contract method 0x6eacd398.
//
// Solidity: function totalBalance(address ) view returns(uint256)
func (_Defi *DefiCallerSession) TotalBalance(arg0 common.Address) (*big.Int, error) {
	return _Defi.Contract.TotalBalance(&_Defi.CallOpts, arg0)
}

// CreateLoanOrder is a paid mutator transaction binding the contract method 0xd6432868.
//
// Solidity: function createLoanOrder(uint256 _id, address _orderOwner, uint256 _pledgeAmount, address _loanCoin, uint256 _loanAmount, uint256 _timeLevel, uint256 _rateAmount, uint256 _fee, uint256 _compClosPrice, uint256 _createTime) returns()
func (_Defi *DefiTransactor) CreateLoanOrder(opts *bind.TransactOpts, _id *big.Int, _orderOwner common.Address, _pledgeAmount *big.Int, _loanCoin common.Address, _loanAmount *big.Int, _timeLevel *big.Int, _rateAmount *big.Int, _fee *big.Int, _compClosPrice *big.Int, _createTime *big.Int) (*types.Transaction, error) {
	return _Defi.contract.Transact(opts, "createLoanOrder", _id, _orderOwner, _pledgeAmount, _loanCoin, _loanAmount, _timeLevel, _rateAmount, _fee, _compClosPrice, _createTime)
}

// CreateLoanOrder is a paid mutator transaction binding the contract method 0xd6432868.
//
// Solidity: function createLoanOrder(uint256 _id, address _orderOwner, uint256 _pledgeAmount, address _loanCoin, uint256 _loanAmount, uint256 _timeLevel, uint256 _rateAmount, uint256 _fee, uint256 _compClosPrice, uint256 _createTime) returns()
func (_Defi *DefiSession) CreateLoanOrder(_id *big.Int, _orderOwner common.Address, _pledgeAmount *big.Int, _loanCoin common.Address, _loanAmount *big.Int, _timeLevel *big.Int, _rateAmount *big.Int, _fee *big.Int, _compClosPrice *big.Int, _createTime *big.Int) (*types.Transaction, error) {
	return _Defi.Contract.CreateLoanOrder(&_Defi.TransactOpts, _id, _orderOwner, _pledgeAmount, _loanCoin, _loanAmount, _timeLevel, _rateAmount, _fee, _compClosPrice, _createTime)
}

// CreateLoanOrder is a paid mutator transaction binding the contract method 0xd6432868.
//
// Solidity: function createLoanOrder(uint256 _id, address _orderOwner, uint256 _pledgeAmount, address _loanCoin, uint256 _loanAmount, uint256 _timeLevel, uint256 _rateAmount, uint256 _fee, uint256 _compClosPrice, uint256 _createTime) returns()
func (_Defi *DefiTransactorSession) CreateLoanOrder(_id *big.Int, _orderOwner common.Address, _pledgeAmount *big.Int, _loanCoin common.Address, _loanAmount *big.Int, _timeLevel *big.Int, _rateAmount *big.Int, _fee *big.Int, _compClosPrice *big.Int, _createTime *big.Int) (*types.Transaction, error) {
	return _Defi.Contract.CreateLoanOrder(&_Defi.TransactOpts, _id, _orderOwner, _pledgeAmount, _loanCoin, _loanAmount, _timeLevel, _rateAmount, _fee, _compClosPrice, _createTime)
}

// CreateMatchOrder is a paid mutator transaction binding the contract method 0x58601fe5.
//
// Solidity: function createMatchOrder(uint256 _id, uint256 _loanId, uint256[] _supIdList, uint256[] _sonSupIdList, uint256[] _amounts, uint256[] _rateAmounts, uint256[] _pledgeAmounts, uint256 _createtime) returns()
func (_Defi *DefiTransactor) CreateMatchOrder(opts *bind.TransactOpts, _id *big.Int, _loanId *big.Int, _supIdList []*big.Int, _sonSupIdList []*big.Int, _amounts []*big.Int, _rateAmounts []*big.Int, _pledgeAmounts []*big.Int, _createtime *big.Int) (*types.Transaction, error) {
	return _Defi.contract.Transact(opts, "createMatchOrder", _id, _loanId, _supIdList, _sonSupIdList, _amounts, _rateAmounts, _pledgeAmounts, _createtime)
}

// CreateMatchOrder is a paid mutator transaction binding the contract method 0x58601fe5.
//
// Solidity: function createMatchOrder(uint256 _id, uint256 _loanId, uint256[] _supIdList, uint256[] _sonSupIdList, uint256[] _amounts, uint256[] _rateAmounts, uint256[] _pledgeAmounts, uint256 _createtime) returns()
func (_Defi *DefiSession) CreateMatchOrder(_id *big.Int, _loanId *big.Int, _supIdList []*big.Int, _sonSupIdList []*big.Int, _amounts []*big.Int, _rateAmounts []*big.Int, _pledgeAmounts []*big.Int, _createtime *big.Int) (*types.Transaction, error) {
	return _Defi.Contract.CreateMatchOrder(&_Defi.TransactOpts, _id, _loanId, _supIdList, _sonSupIdList, _amounts, _rateAmounts, _pledgeAmounts, _createtime)
}

// CreateMatchOrder is a paid mutator transaction binding the contract method 0x58601fe5.
//
// Solidity: function createMatchOrder(uint256 _id, uint256 _loanId, uint256[] _supIdList, uint256[] _sonSupIdList, uint256[] _amounts, uint256[] _rateAmounts, uint256[] _pledgeAmounts, uint256 _createtime) returns()
func (_Defi *DefiTransactorSession) CreateMatchOrder(_id *big.Int, _loanId *big.Int, _supIdList []*big.Int, _sonSupIdList []*big.Int, _amounts []*big.Int, _rateAmounts []*big.Int, _pledgeAmounts []*big.Int, _createtime *big.Int) (*types.Transaction, error) {
	return _Defi.Contract.CreateMatchOrder(&_Defi.TransactOpts, _id, _loanId, _supIdList, _sonSupIdList, _amounts, _rateAmounts, _pledgeAmounts, _createtime)
}

// CreateSupOrder is a paid mutator transaction binding the contract method 0xaa050f67.
//
// Solidity: function createSupOrder(uint256 _id, address _orderOwner, address _coinAddr, uint256 _amount, uint256 _timeLevel, uint256 _createTime) returns()
func (_Defi *DefiTransactor) CreateSupOrder(opts *bind.TransactOpts, _id *big.Int, _orderOwner common.Address, _coinAddr common.Address, _amount *big.Int, _timeLevel *big.Int, _createTime *big.Int) (*types.Transaction, error) {
	return _Defi.contract.Transact(opts, "createSupOrder", _id, _orderOwner, _coinAddr, _amount, _timeLevel, _createTime)
}

// CreateSupOrder is a paid mutator transaction binding the contract method 0xaa050f67.
//
// Solidity: function createSupOrder(uint256 _id, address _orderOwner, address _coinAddr, uint256 _amount, uint256 _timeLevel, uint256 _createTime) returns()
func (_Defi *DefiSession) CreateSupOrder(_id *big.Int, _orderOwner common.Address, _coinAddr common.Address, _amount *big.Int, _timeLevel *big.Int, _createTime *big.Int) (*types.Transaction, error) {
	return _Defi.Contract.CreateSupOrder(&_Defi.TransactOpts, _id, _orderOwner, _coinAddr, _amount, _timeLevel, _createTime)
}

// CreateSupOrder is a paid mutator transaction binding the contract method 0xaa050f67.
//
// Solidity: function createSupOrder(uint256 _id, address _orderOwner, address _coinAddr, uint256 _amount, uint256 _timeLevel, uint256 _createTime) returns()
func (_Defi *DefiTransactorSession) CreateSupOrder(_id *big.Int, _orderOwner common.Address, _coinAddr common.Address, _amount *big.Int, _timeLevel *big.Int, _createTime *big.Int) (*types.Transaction, error) {
	return _Defi.Contract.CreateSupOrder(&_Defi.TransactOpts, _id, _orderOwner, _coinAddr, _amount, _timeLevel, _createTime)
}

// ProcessOrder is a paid mutator transaction binding the contract method 0xdee8959c.
//
// Solidity: function processOrder(uint256 _moid, uint256 _time, uint256 _procType) returns()
func (_Defi *DefiTransactor) ProcessOrder(opts *bind.TransactOpts, _moid *big.Int, _time *big.Int, _procType *big.Int) (*types.Transaction, error) {
	return _Defi.contract.Transact(opts, "processOrder", _moid, _time, _procType)
}

// ProcessOrder is a paid mutator transaction binding the contract method 0xdee8959c.
//
// Solidity: function processOrder(uint256 _moid, uint256 _time, uint256 _procType) returns()
func (_Defi *DefiSession) ProcessOrder(_moid *big.Int, _time *big.Int, _procType *big.Int) (*types.Transaction, error) {
	return _Defi.Contract.ProcessOrder(&_Defi.TransactOpts, _moid, _time, _procType)
}

// ProcessOrder is a paid mutator transaction binding the contract method 0xdee8959c.
//
// Solidity: function processOrder(uint256 _moid, uint256 _time, uint256 _procType) returns()
func (_Defi *DefiTransactorSession) ProcessOrder(_moid *big.Int, _time *big.Int, _procType *big.Int) (*types.Transaction, error) {
	return _Defi.Contract.ProcessOrder(&_Defi.TransactOpts, _moid, _time, _procType)
}

// SetManager is a paid mutator transaction binding the contract method 0xa5e90eee.
//
// Solidity: function setManager(address _mAddr, bool isAdd) returns()
func (_Defi *DefiTransactor) SetManager(opts *bind.TransactOpts, _mAddr common.Address, isAdd bool) (*types.Transaction, error) {
	return _Defi.contract.Transact(opts, "setManager", _mAddr, isAdd)
}

// SetManager is a paid mutator transaction binding the contract method 0xa5e90eee.
//
// Solidity: function setManager(address _mAddr, bool isAdd) returns()
func (_Defi *DefiSession) SetManager(_mAddr common.Address, isAdd bool) (*types.Transaction, error) {
	return _Defi.Contract.SetManager(&_Defi.TransactOpts, _mAddr, isAdd)
}

// SetManager is a paid mutator transaction binding the contract method 0xa5e90eee.
//
// Solidity: function setManager(address _mAddr, bool isAdd) returns()
func (_Defi *DefiTransactorSession) SetManager(_mAddr common.Address, isAdd bool) (*types.Transaction, error) {
	return _Defi.Contract.SetManager(&_Defi.TransactOpts, _mAddr, isAdd)
}

// Withdraw is a paid mutator transaction binding the contract method 0x2e1a7d4d.
//
// Solidity: function withdraw(uint256 _supId) returns()
func (_Defi *DefiTransactor) Withdraw(opts *bind.TransactOpts, _supId *big.Int) (*types.Transaction, error) {
	return _Defi.contract.Transact(opts, "withdraw", _supId)
}

// Withdraw is a paid mutator transaction binding the contract method 0x2e1a7d4d.
//
// Solidity: function withdraw(uint256 _supId) returns()
func (_Defi *DefiSession) Withdraw(_supId *big.Int) (*types.Transaction, error) {
	return _Defi.Contract.Withdraw(&_Defi.TransactOpts, _supId)
}

// Withdraw is a paid mutator transaction binding the contract method 0x2e1a7d4d.
//
// Solidity: function withdraw(uint256 _supId) returns()
func (_Defi *DefiTransactorSession) Withdraw(_supId *big.Int) (*types.Transaction, error) {
	return _Defi.Contract.Withdraw(&_Defi.TransactOpts, _supId)
}

// Fallback is a paid mutator transaction binding the contract fallback function.
//
// Solidity: fallback() payable returns()
func (_Defi *DefiTransactor) Fallback(opts *bind.TransactOpts, calldata []byte) (*types.Transaction, error) {
	return _Defi.contract.RawTransact(opts, calldata)
}

// Fallback is a paid mutator transaction binding the contract fallback function.
//
// Solidity: fallback() payable returns()
func (_Defi *DefiSession) Fallback(calldata []byte) (*types.Transaction, error) {
	return _Defi.Contract.Fallback(&_Defi.TransactOpts, calldata)
}

// Fallback is a paid mutator transaction binding the contract fallback function.
//
// Solidity: fallback() payable returns()
func (_Defi *DefiTransactorSession) Fallback(calldata []byte) (*types.Transaction, error) {
	return _Defi.Contract.Fallback(&_Defi.TransactOpts, calldata)
}

// Receive is a paid mutator transaction binding the contract receive function.
//
// Solidity: receive() payable returns()
func (_Defi *DefiTransactor) Receive(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Defi.contract.RawTransact(opts, nil) // calldata is disallowed for receive function
}

// Receive is a paid mutator transaction binding the contract receive function.
//
// Solidity: receive() payable returns()
func (_Defi *DefiSession) Receive() (*types.Transaction, error) {
	return _Defi.Contract.Receive(&_Defi.TransactOpts)
}

// Receive is a paid mutator transaction binding the contract receive function.
//
// Solidity: receive() payable returns()
func (_Defi *DefiTransactorSession) Receive() (*types.Transaction, error) {
	return _Defi.Contract.Receive(&_Defi.TransactOpts)
}
